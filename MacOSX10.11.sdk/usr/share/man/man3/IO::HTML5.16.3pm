.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.20)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "IO::HTML 3"
.TH IO::HTML 3 "2012-02-04" "perl v5.16.3" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
IO::HTML \- Open an HTML file with automatic charset detection
.SH "VERSION"
.IX Header "VERSION"
This document describes version 0.04 of
\&\s-1IO::HTML\s0, released February 4, 2012.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&  use IO::HTML;                 # exports html_file by default
\&  use HTML::TreeBuilder;
\&
\&  my $tree = HTML::TreeBuilder\->new_from_file(
\&               html_file(\*(Aqfoo.html\*(Aq)
\&             );
\&
\&  # Alternative interface:
\&  open(my $in, \*(Aq<:raw\*(Aq, \*(Aqbar.html\*(Aq);
\&  my $encoding = IO::HTML::sniff_encoding($in, \*(Aqbar.html\*(Aq);
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\s-1IO::HTML\s0 provides an easy way to open a file containing \s-1HTML\s0 while
automatically determining its encoding.  It uses the \s-1HTML5\s0 encoding
sniffing algorithm specified in section 8.2.2.1 of the draft standard.
.PP
The algorithm as implemented here is:
.IP "1." 4
If the file begins with a byte order mark indicating \s-1UTF\-16LE\s0,
\&\s-1UTF\-16BE\s0, or \s-1UTF\-8\s0, then that is the encoding.
.IP "2." 4
If the first 1024 bytes of the file contain a \f(CW\*(C`<meta>\*(C'\fR tag that
indicates the charset, and Encode recognizes the specified charset
name, then that is the encoding.  (This portion of the algorithm is
implemented by \f(CW\*(C`find_charset_in\*(C'\fR.)
.Sp
The \f(CW\*(C`<meta>\*(C'\fR tag can be in one of two formats:
.Sp
.Vb 2
\&  <meta charset="...">
\&  <meta http\-equiv="Content\-Type" content="...charset=...">
.Ve
.Sp
The search is case-insensitive, and the order of attributes within the
tag is irrelevant.  Any additional attributes of the tag are ignored.
The first matching tag with a recognized encoding ends the search.
.IP "3." 4
If the first 1024 bytes of the file are valid \s-1UTF\-8\s0 (with at least 1
non-ASCII character), then the encoding is \s-1UTF\-8\s0.
.IP "4." 4
If all else fails, use the default character encoding.  The \s-1HTML5\s0
standard suggests the default encoding should be locale dependent, but
currently it is always \f(CW\*(C`cp1252\*(C'\fR unless you set
\&\f(CW$IO::HTML::default_encoding\fR to a different value.  Note:
\&\f(CW\*(C`sniff_encoding\*(C'\fR does not apply this step; only \f(CW\*(C`html_file\*(C'\fR does
that.
.SH "SUBROUTINES"
.IX Header "SUBROUTINES"
.SS "html_file"
.IX Subsection "html_file"
.Vb 1
\&  $filehandle = html_file($filename, \e%options);
.Ve
.PP
This function (exported by default) is the primary entry point.  It
opens the file specified by \f(CW$filename\fR for reading, uses
\&\f(CW\*(C`sniff_encoding\*(C'\fR to find a suitable encoding layer, and applies it.
It also applies the \f(CW\*(C`:crlf\*(C'\fR layer.  If the file begins with a \s-1BOM\s0,
the filehandle is positioned just after the \s-1BOM\s0.
.PP
The optional second argument is a hashref containing options.  The
possible keys are described under \f(CW\*(C`find_charset_in\*(C'\fR.
.PP
If \f(CW\*(C`sniff_encoding\*(C'\fR is unable to determine the encoding, it defaults
to \f(CW$IO::HTML::default_encoding\fR, which is set to \f(CW\*(C`cp1252\*(C'\fR
(a.k.a. Windows\-1252) by default.  According to the standard, the
default should be locale dependent, but that is not currently
implemented.
.PP
It dies if the file cannot be opened.
.SS "html_file_and_encoding"
.IX Subsection "html_file_and_encoding"
.Vb 2
\&  ($filehandle, $encoding, $bom)
\&    = html_file_and_encoding($filename, \e%options);
.Ve
.PP
This function (exported only by request) is just like \f(CW\*(C`html_file\*(C'\fR,
but returns more information.  In addition to the filehandle, it
returns the name of the encoding used, and a flag indicating whether a
byte order mark was found (if \f(CW$bom\fR is true, the file began with a
\&\s-1BOM\s0).  This may be useful if you want to write the file out again
(especially in conjunction with the \f(CW\*(C`html_outfile\*(C'\fR function).
.PP
The optional second argument is a hashref containing options.  The
possible keys are described under \f(CW\*(C`find_charset_in\*(C'\fR.
.PP
It dies if the file cannot be opened.  The result of calling it in
scalar context is undefined.
.SS "html_outfile"
.IX Subsection "html_outfile"
.Vb 1
\&  $filehandle = html_outfile($filename, $encoding, $bom);
.Ve
.PP
This function (exported only by request) opens \f(CW$filename\fR for output
using \f(CW$encoding\fR, and writes a \s-1BOM\s0 to it if \f(CW$bom\fR is true.
If \f(CW$encoding\fR is \f(CW\*(C`undef\*(C'\fR, it defaults to \f(CW$IO::HTML::default_encoding\fR.
\&\f(CW$encoding\fR may be either an encoding name or an Encode::Encoding object.
.PP
It dies if the file cannot be opened.
.SS "sniff_encoding"
.IX Subsection "sniff_encoding"
.Vb 1
\&  ($encoding, $bom) = sniff_encoding($filehandle, $filename, \e%options);
.Ve
.PP
This function (exported only by request) runs the \s-1HTML5\s0 encoding
sniffing algorithm on \f(CW$filehandle\fR (which must be seekable, and
should have been opened in \f(CW\*(C`:raw\*(C'\fR mode).  \f(CW$filename\fR is used only
for error messages (if there's a problem using the filehandle), and
defaults to \*(L"file\*(R" if omitted.  The optional third argument is a
hashref containing options.  The possible keys are described under
\&\f(CW\*(C`find_charset_in\*(C'\fR.
.PP
It returns Perl's canonical name for the encoding, which is not
necessarily the same as the \s-1MIME\s0 or \s-1IANA\s0 charset name.  It returns
\&\f(CW\*(C`undef\*(C'\fR if the encoding cannot be determined.  \f(CW$bom\fR is true if the
file began with a byte order mark.  In scalar context, it returns only
\&\f(CW$encoding\fR.
.PP
Tip: If you want to run \f(CW\*(C`sniff_encoding\*(C'\fR on a file you've already
loaded into a string, open an in-memory file on the string, and pass
that handle:
.PP
.Vb 3
\&  ($encoding, $bom) = do {
\&    open(my $fh, \*(Aq<\*(Aq, \e$string);  sniff_encoding($fh)
\&  };
.Ve
.PP
(This only makes sense if \f(CW\*(C`utf8::is_utf8($string)\*(C'\fR is false.)
.SS "find_charset_in"
.IX Subsection "find_charset_in"
.Vb 1
\&  $encoding = find_charset_in($string_containing_HTML, \e%options);
.Ve
.PP
This function (exported only by request) looks for charset information
in a \f(CW\*(C`<meta>\*(C'\fR tag in a possibly incomplete \s-1HTML\s0 document using
the \*(L"two step\*(R" algorithm specified by \s-1HTML5\s0.  It does not look for a \s-1BOM\s0.
Only the first 1024 bytes of the string are checked.
.PP
It returns Perl's canonical name for the encoding, which is not
necessarily the same as the \s-1MIME\s0 or \s-1IANA\s0 charset name.  It returns
\&\f(CW\*(C`undef\*(C'\fR if no charset is specified or if the specified charset is not
recognized by the Encode module.
.PP
The optional second argument is a hashref containing options.  The
following keys are recognized:
.ie n .IP """encoding""" 4
.el .IP "\f(CWencoding\fR" 4
.IX Item "encoding"
If true, return the Encode::Encoding object instead of its name.
Defaults to false.
.ie n .IP """need_pragma""" 4
.el .IP "\f(CWneed_pragma\fR" 4
.IX Item "need_pragma"
If true (the default), follow the \s-1HTML5\s0 spec and examine the
\&\f(CW\*(C`content\*(C'\fR attribute only of \f(CW\*(C`<meta http\-equiv="Content\-Type"\*(C'\fR.
If set to 0, relax the \s-1HTML5\s0 spec, and look for \*(L"charset=\*(R" in the
\&\f(CW\*(C`content\*(C'\fR attribute of \fIevery\fR meta tag.
.SH "EXPORTS"
.IX Header "EXPORTS"
By default, only \f(CW\*(C`html_file\*(C'\fR is exported.  Other functions may be
exported on request.
.PP
For people who prefer not to export functions, all functions beginning
with \f(CW\*(C`html_\*(C'\fR have an alias without that prefix (e.g. you can call
\&\f(CW\*(C`IO::HTML::file(...)\*(C'\fR instead of \f(CW\*(C`IO::HTML::html_file(...)\*(C'\fR.  These
aliases are not exportable.
.PP
The following export tags are available:
.ie n .IP """:all""" 4
.el .IP "\f(CW:all\fR" 4
.IX Item ":all"
All exportable functions.
.ie n .IP """:rw""" 4
.el .IP "\f(CW:rw\fR" 4
.IX Item ":rw"
\&\f(CW\*(C`html_file\*(C'\fR, \f(CW\*(C`html_file_and_encoding\*(C'\fR, \f(CW\*(C`html_outfile\*(C'\fR.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
The \s-1HTML5\s0 specification, section 8.2.2.1 Determining the character encoding:
http://www.w3.org/TR/html5/parsing.html#determining\-the\-character\-encoding <http://www.w3.org/TR/html5/parsing.html#determining-the-character-encoding>
.SH "DIAGNOSTICS"
.IX Header "DIAGNOSTICS"
.ie n .IP """Could not read %s: %s""" 4
.el .IP "\f(CWCould not read %s: %s\fR" 4
.IX Item "Could not read %s: %s"
The specified file could not be read from for the reason specified by \f(CW$!\fR.
.ie n .IP """Could not seek %s: %s""" 4
.el .IP "\f(CWCould not seek %s: %s\fR" 4
.IX Item "Could not seek %s: %s"
The specified file could not be rewound for the reason specified by \f(CW$!\fR.
.ie n .IP """Failed to open %s: %s""" 4
.el .IP "\f(CWFailed to open %s: %s\fR" 4
.IX Item "Failed to open %s: %s"
The specified file could not be opened for reading for the reason
specified by \f(CW$!\fR.
.ie n .IP """No default encoding specified""" 4
.el .IP "\f(CWNo default encoding specified\fR" 4
.IX Item "No default encoding specified"
The \f(CW\*(C`sniff_encoding\*(C'\fR algorithm didn't find an encoding to use, and
you set \f(CW$IO::HTML::default_encoding\fR to \f(CW\*(C`undef\*(C'\fR.
.SH "CONFIGURATION AND ENVIRONMENT"
.IX Header "CONFIGURATION AND ENVIRONMENT"
\&\s-1IO::HTML\s0 requires no configuration files or environment variables.
.SH "DEPENDENCIES"
.IX Header "DEPENDENCIES"
\&\s-1IO::HTML\s0 has no non-core dependencies for Perl 5.8.7+.  With earlier
versions of Perl 5.8, you need to upgrade Encode to at least
version 2.10, and
you may need to upgrade Exporter to at least version
5.57.
.SH "INCOMPATIBILITIES"
.IX Header "INCOMPATIBILITIES"
None reported.
.SH "BUGS AND LIMITATIONS"
.IX Header "BUGS AND LIMITATIONS"
No bugs have been reported.
.SH "AUTHOR"
.IX Header "AUTHOR"
Christopher J. Madsen  \f(CW\*(C`<perl\ AT\ cjmweb.net>\*(C'\fR
.PP
Please report any bugs or feature requests
to \f(CW\*(C`<bug\-IO\-HTML\ AT\ rt.cpan.org>\*(C'\fR
or through the web interface at
http://rt.cpan.org/Public/Bug/Report.html?Queue=IO\-HTML <http://rt.cpan.org/Public/Bug/Report.html?Queue=IO-HTML>.
.PP
You can follow or contribute to IO-HTML's development at
http://github.com/madsen/io\-html <http://github.com/madsen/io-html>.
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2012 by Christopher J. Madsen.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
.SH "DISCLAIMER OF WARRANTY"
.IX Header "DISCLAIMER OF WARRANTY"
\&\s-1BECAUSE\s0 \s-1THIS\s0 \s-1SOFTWARE\s0 \s-1IS\s0 \s-1LICENSED\s0 \s-1FREE\s0 \s-1OF\s0 \s-1CHARGE\s0, \s-1THERE\s0 \s-1IS\s0 \s-1NO\s0 \s-1WARRANTY\s0
\&\s-1FOR\s0 \s-1THE\s0 \s-1SOFTWARE\s0, \s-1TO\s0 \s-1THE\s0 \s-1EXTENT\s0 \s-1PERMITTED\s0 \s-1BY\s0 \s-1APPLICABLE\s0 \s-1LAW\s0. \s-1EXCEPT\s0 \s-1WHEN\s0
\&\s-1OTHERWISE\s0 \s-1STATED\s0 \s-1IN\s0 \s-1WRITING\s0 \s-1THE\s0 \s-1COPYRIGHT\s0 \s-1HOLDERS\s0 \s-1AND/OR\s0 \s-1OTHER\s0 \s-1PARTIES\s0
\&\s-1PROVIDE\s0 \s-1THE\s0 \s-1SOFTWARE\s0 \*(L"\s-1AS\s0 \s-1IS\s0\*(R" \s-1WITHOUT\s0 \s-1WARRANTY\s0 \s-1OF\s0 \s-1ANY\s0 \s-1KIND\s0, \s-1EITHER\s0
\&\s-1EXPRESSED\s0 \s-1OR\s0 \s-1IMPLIED\s0, \s-1INCLUDING\s0, \s-1BUT\s0 \s-1NOT\s0 \s-1LIMITED\s0 \s-1TO\s0, \s-1THE\s0 \s-1IMPLIED\s0
\&\s-1WARRANTIES\s0 \s-1OF\s0 \s-1MERCHANTABILITY\s0 \s-1AND\s0 \s-1FITNESS\s0 \s-1FOR\s0 A \s-1PARTICULAR\s0 \s-1PURPOSE\s0. \s-1THE\s0
\&\s-1ENTIRE\s0 \s-1RISK\s0 \s-1AS\s0 \s-1TO\s0 \s-1THE\s0 \s-1QUALITY\s0 \s-1AND\s0 \s-1PERFORMANCE\s0 \s-1OF\s0 \s-1THE\s0 \s-1SOFTWARE\s0 \s-1IS\s0 \s-1WITH\s0
\&\s-1YOU\s0. \s-1SHOULD\s0 \s-1THE\s0 \s-1SOFTWARE\s0 \s-1PROVE\s0 \s-1DEFECTIVE\s0, \s-1YOU\s0 \s-1ASSUME\s0 \s-1THE\s0 \s-1COST\s0 \s-1OF\s0 \s-1ALL\s0
\&\s-1NECESSARY\s0 \s-1SERVICING\s0, \s-1REPAIR\s0, \s-1OR\s0 \s-1CORRECTION\s0.
.PP
\&\s-1IN\s0 \s-1NO\s0 \s-1EVENT\s0 \s-1UNLESS\s0 \s-1REQUIRED\s0 \s-1BY\s0 \s-1APPLICABLE\s0 \s-1LAW\s0 \s-1OR\s0 \s-1AGREED\s0 \s-1TO\s0 \s-1IN\s0 \s-1WRITING\s0
\&\s-1WILL\s0 \s-1ANY\s0 \s-1COPYRIGHT\s0 \s-1HOLDER\s0, \s-1OR\s0 \s-1ANY\s0 \s-1OTHER\s0 \s-1PARTY\s0 \s-1WHO\s0 \s-1MAY\s0 \s-1MODIFY\s0 \s-1AND/OR\s0
\&\s-1REDISTRIBUTE\s0 \s-1THE\s0 \s-1SOFTWARE\s0 \s-1AS\s0 \s-1PERMITTED\s0 \s-1BY\s0 \s-1THE\s0 \s-1ABOVE\s0 \s-1LICENSE\s0, \s-1BE\s0
\&\s-1LIABLE\s0 \s-1TO\s0 \s-1YOU\s0 \s-1FOR\s0 \s-1DAMAGES\s0, \s-1INCLUDING\s0 \s-1ANY\s0 \s-1GENERAL\s0, \s-1SPECIAL\s0, \s-1INCIDENTAL\s0,
\&\s-1OR\s0 \s-1CONSEQUENTIAL\s0 \s-1DAMAGES\s0 \s-1ARISING\s0 \s-1OUT\s0 \s-1OF\s0 \s-1THE\s0 \s-1USE\s0 \s-1OR\s0 \s-1INABILITY\s0 \s-1TO\s0 \s-1USE\s0
\&\s-1THE\s0 \s-1SOFTWARE\s0 (\s-1INCLUDING\s0 \s-1BUT\s0 \s-1NOT\s0 \s-1LIMITED\s0 \s-1TO\s0 \s-1LOSS\s0 \s-1OF\s0 \s-1DATA\s0 \s-1OR\s0 \s-1DATA\s0 \s-1BEING\s0
\&\s-1RENDERED\s0 \s-1INACCURATE\s0 \s-1OR\s0 \s-1LOSSES\s0 \s-1SUSTAINED\s0 \s-1BY\s0 \s-1YOU\s0 \s-1OR\s0 \s-1THIRD\s0 \s-1PARTIES\s0 \s-1OR\s0 A
\&\s-1FAILURE\s0 \s-1OF\s0 \s-1THE\s0 \s-1SOFTWARE\s0 \s-1TO\s0 \s-1OPERATE\s0 \s-1WITH\s0 \s-1ANY\s0 \s-1OTHER\s0 \s-1SOFTWARE\s0), \s-1EVEN\s0 \s-1IF\s0
\&\s-1SUCH\s0 \s-1HOLDER\s0 \s-1OR\s0 \s-1OTHER\s0 \s-1PARTY\s0 \s-1HAS\s0 \s-1BEEN\s0 \s-1ADVISED\s0 \s-1OF\s0 \s-1THE\s0 \s-1POSSIBILITY\s0 \s-1OF\s0
\&\s-1SUCH\s0 \s-1DAMAGES\s0.
