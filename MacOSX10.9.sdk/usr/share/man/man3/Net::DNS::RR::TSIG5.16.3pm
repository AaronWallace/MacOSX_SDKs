.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.20)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Net::DNS::RR::TSIG 3"
.TH Net::DNS::RR::TSIG 3 "2012-01-27" "perl v5.16.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Net::DNS::RR::TSIG \- DNS TSIG resource record
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\f(CW\*(C`use Net::DNS::RR\*(C'\fR;
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Class for \s-1DNS\s0 Transaction Signature (\s-1TSIG\s0) resource records.
.SH "METHODS"
.IX Header "METHODS"
.SS "algorithm"
.IX Subsection "algorithm"
.Vb 2
\&    $rr\->algorithm($algorithm_name);
\&    print "algorithm = ", $rr\->algorithm, "\en";
.Ve
.PP
Gets or sets the domain name that specifies the name of the algorithm.
The only algorithm currently supported is \s-1HMAC\-MD5\s0.SIG\-ALG.REG.INT.
.SS "time_signed"
.IX Subsection "time_signed"
.Vb 2
\&    $rr\->time_signed(time);
\&    print "time signed = ", $rr\->time_signed, "\en";
.Ve
.PP
Gets or sets the signing time as the number of seconds since 1 Jan 1970
00:00:00 \s-1UTC\s0.
.PP
The default signing time is the current time.
.SS "fudge"
.IX Subsection "fudge"
.Vb 2
\&    $rr\->fudge(60);
\&    print "fudge = ", $rr\->fudge, "\en";
.Ve
.PP
Gets or sets the \*(L"fudge\*(R", i.e., the seconds of error permitted in the
signing time.
.PP
The default fudge is 300 seconds.
.SS "mac_size"
.IX Subsection "mac_size"
.Vb 1
\&    print "MAC size = ", $rr\->mac_size, "\en";
.Ve
.PP
Returns the number of octets in the message authentication code (\s-1MAC\s0).
The programmer must call a Net::DNS::Packet object's data method
before this will return anything meaningful.
.SS "mac"
.IX Subsection "mac"
.Vb 1
\&    print "MAC = ", $rr\->mac, "\en";
.Ve
.PP
Returns the message authentication code (\s-1MAC\s0) as a string of hex
characters.  The programmer must call a Net::DNS::Packet object's
data method before this will return anything meaningful.
.SS "original_id"
.IX Subsection "original_id"
.Vb 2
\&    $rr\->original_id(12345);
\&    print "original ID = ", $rr\->original_id, "\en";
.Ve
.PP
Gets or sets the original message \s-1ID\s0.
.SS "error"
.IX Subsection "error"
.Vb 1
\&    print "error = ", $rr\->error, "\en";
.Ve
.PP
Returns the \s-1RCODE\s0 covering \s-1TSIG\s0 processing.  Common values are
\&\s-1NOERROR\s0, \s-1BADSIG\s0, \s-1BADKEY\s0, and \s-1BADTIME\s0.  See \s-1RFC\s0 2845 for details.
.SS "other_len"
.IX Subsection "other_len"
.Vb 1
\&    print "other len = ", $rr\->other_len, "\en";
.Ve
.PP
Returns the length of the Other Data.  Should be zero unless the
error is \s-1BADTIME\s0.
.SS "other_data"
.IX Subsection "other_data"
.Vb 1
\&    print "other data = ", $rr\->other_data, "\en";
.Ve
.PP
Returns the Other Data.  This field should be empty unless the
error is \s-1BADTIME\s0, in which case it will contain the server's
time as the number of seconds since 1 Jan 1970 00:00:00 \s-1UTC\s0.
.SS "sig_data"
.IX Subsection "sig_data"
.Vb 1
\&     my $sigdata = $tsig\->sig_data($packet);
.Ve
.PP
Returns the packet packed according to \s-1RFC2845\s0 in a form for signing. This
is only needed if you want to supply an external signing function, such as is
needed for TSIG-GSS.
.SS "sign_func"
.IX Subsection "sign_func"
.Vb 2
\&     sub my_sign_fn($$) {
\&             my ($key, $data) = @_;
\&
\&             return some_digest_algorithm($key, $data);
\&     }
\&
\&     $tsig\->sign_func(\e&my_sign_fn);
.Ve
.PP
This sets the signing function to be used for this \s-1TSIG\s0 record.
.PP
The default signing function is \s-1HMAC\-MD5\s0.
.SH "BUGS"
.IX Header "BUGS"
This code is still under development.  Use with caution on production
systems.
.PP
The time_signed and other_data fields should be 48\-bit unsigned
integers (\s-1RFC\s0 2845, Sections 2.3 and 4.5.2).  The current implementation
ignores the upper 16 bits; this will cause problems for times later
than 19 Jan 2038 03:14:07 \s-1UTC\s0.
.PP
The only builtin algorithm currently supported is
\&\s-1HMAC\-MD5\s0.SIG\-ALG.REG.INT. You can use other algorithms by supplying an
appropriate sign_func.
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2002 Michael Fuhr.
.PP
Portions Copyright (c) 2002\-2004 Chris Reinhardt.
.PP
All rights reserved.  This program is free software; you may redistribute
it and/or modify it under the same terms as Perl itself.
.SH "ACKNOWLEDGMENT"
.IX Header "ACKNOWLEDGMENT"
Most of the code in the Net::DNS::RR::TSIG module was contributed
by Chris Turbeville.
.PP
Support for external signing functions was added by Andrew Tridgell.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIperl\fR\|(1), Net::DNS, Net::DNS::Resolver, Net::DNS::Packet,
Net::DNS::Header, Net::DNS::Question, Net::DNS::RR,
\&\s-1RFC\s0 2845
