.\" Automatically generated by Pod::Man 2.23 (Pod::Simple 3.14)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "IO::Pager 3"
.TH IO::Pager 3 "2005-09-21" "perl v5.12.5" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
IO::Pager \- Select a pager, optionally pipe it output if destination is a TTY
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&  #Select a pager, sets $ENV{PAGER}
\&  use IO::Pager;
\&
\&  #Optionally pipe output
\&  {
\&    #local $STDOUT =     IO::Pager::open *STDOUT;
\&    local  $STDOUT = new IO::Pager       *STDOUT;
\&    print <<"  HEREDOC" ;
\&    ...
\&    A bunch of text later
\&    HEREDOC
\&  }
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
IO::Pager is lightweight and can be used to locate an available pager
and set \f(CW$ENV\fR{\s-1PAGER\s0} (see \*(L"\s-1NOTES\s0\*(R") or as a factory for creating objects
defined elsewhere such as IO::Pager::Buffered and IO::Pager::Unbuffered.
.PP
IO::Pager subclasses are designed to programmatically decide whether
or not to pipe a filehandle's output to a program specified in \f(CW$ENV\fR{\s-1PAGER\s0}.
Subclasses are only required to support filehandle output methods and close,
namely
.IP "\s-1CLOSE\s0" 4
.IX Item "CLOSE"
Supports \fIclose()\fR of the filehandle.
.IP "\s-1PRINT\s0" 4
.IX Item "PRINT"
Supports \fIprint()\fR to the filehandle.
.IP "\s-1PRINTF\s0" 4
.IX Item "PRINTF"
Supports \fIprintf()\fR to the filehandle.
.IP "\s-1WRITE\s0" 4
.IX Item "WRITE"
Supports \fIsyswrite()\fR to the filehandle.
.PP
For anything else, \s-1YMMV\s0.
.SS "new( [\s-1FILEHANDLE\s0], [\s-1EXPR\s0] )"
.IX Subsection "new( [FILEHANDLE], [EXPR] )"
Instantiate a new IO::Pager to paginate \s-1FILEHANDLE\s0 if necessary.
\&\fIAssign the return value to a scoped variable\fR.
.PP
See the appropriate subclass for implementation specific details.
.IP "\s-1FILEHANDLE\s0" 4
.IX Item "FILEHANDLE"
Defaults to currently \fIselect()\fR\-ed \s-1FILEHANDLE\s0.
.IP "\s-1EXPR\s0" 4
.IX Item "EXPR"
An expression which evaluates to the subclass of object to create.
.Sp
Defaults to IO::Pager::Unbuffered.
.SS "open( [\s-1FILEHANDLE\s0], [\s-1EXPR\s0] )"
.IX Subsection "open( [FILEHANDLE], [EXPR] )"
An alias for new.
.SS "close( \s-1FILEHANDLE\s0 )"
.IX Subsection "close( FILEHANDLE )"
Explicitly close the filehandle, this stops any redirection of output
on \s-1FILEHANDLE\s0 that may have been warranted. Normally you'd just wait for the
object to pass out of scope.
.PP
\&\fIThis does not default to the current filehandle\fR.
.PP
See the appropriate subclass for implementation specific details.
.SH "ENVIRONMENT"
.IX Header "ENVIRONMENT"
.IP "\s-1PAGER\s0" 4
.IX Item "PAGER"
The location of the default pager.
.IP "\s-1PATH\s0" 4
.IX Item "PATH"
If \s-1PAGER\s0 does not specify an absolute path for the binary \s-1PATH\s0 may be used.
.Sp
See \*(L"\s-1NOTES\s0\*(R" for more information.
.SH "FILES"
.IX Header "FILES"
IO::Pager may fall back to these binaries in order if
\&\fI\f(CI$ENV\fI{\s-1PAGER\s0}\fR is not executable.
.IP "/usr/local/bin/less" 4
.IX Item "/usr/local/bin/less"
.PD 0
.IP "/usr/bin/less" 4
.IX Item "/usr/bin/less"
.IP "/usr/bin/more" 4
.IX Item "/usr/bin/more"
.PD
.PP
See \*(L"\s-1NOTES\s0\*(R" for more information.
.SH "NOTES"
.IX Header "NOTES"
The algorythm for determining which pager is to use as follows:
.ie n .IP "1. Defer to $ENV{\s-1PAGER\s0}" 4
.el .IP "1. Defer to \f(CW$ENV\fR{\s-1PAGER\s0}" 4
.IX Item "1. Defer to $ENV{PAGER}"
Use the value of \f(CW$ENV\fR{\s-1PAGER\s0} if it exists unless File::Which is available
and the pager in \f(CW$ENV\fR{\s-1PAGER\s0} is determined to be unavailable.
.IP "2. Usual suspects" 4
.IX Item "2. Usual suspects"
Try the standard, hardcoded paths in \*(L"\s-1FILES\s0\*(R".
.IP "3. File::Which" 4
.IX Item "3. File::Which"
If File::Which is available check for \f(CW\*(C`less\*(C'\fR and more.
.IP "4. more" 4
.IX Item "4. more"
Set \f(CW$ENV\fR{\s-1PAGER\s0} to \f(CW\*(C`more\*(C'\fR
.PP
Steps 1, 3 and 4 rely upon \f(CW$ENV\fR{\s-1PATH\s0}.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
IO::Pager::Buffered, IO::Pager::Unbuffered, IO::Pager::Page
.PP
IO::Page, Tool::Less
.SH "AUTHOR"
.IX Header "AUTHOR"
Jerrad Pierce <jpierce@cpan.org>
.PP
This module is forked from IO::Page 0.02 by Monte Mitzelfelt
.SH "LICENSE"
.IX Header "LICENSE"
.IP "\(bu" 4
Thou shalt not claim ownership of unmodified materials.
.IP "\(bu" 4
Thou shalt not claim whole ownership of modified materials.
.IP "\(bu" 4
Thou shalt grant the indemnity of the provider of materials.
.IP "\(bu" 4
Thou shalt use and dispense freely without other restrictions.
