.\" Automatically generated by Pod::Man 2.23 (Pod::Simple 3.14)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "PERL5111DELTA 1"
.TH PERL5111DELTA 1 "2012-11-03" "perl v5.12.5" "Perl Programmers Reference Guide"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
perl5111delta \- what is new for perl v5.11.1
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This document describes differences between the 5.11.0 release and
the 5.11.1 release.
.SH "Incompatible Changes"
.IX Header "Incompatible Changes"
.IP "\(bu" 4
The boolkeys op moved to the group of hash ops. This breaks binary compatibility.
.IP "\(bu" 4
\&\f(CW\*(C`\es\*(C'\fR \f(CW\*(C`\ew\*(C'\fR and \f(CW\*(C`\ed\*(C'\fR once again have the semantics they had in Perl 5.8.x.
.SH "Core Enhancements"
.IX Header "Core Enhancements"
.ie n .SS "Add ""package NAME VERSION"" syntax"
.el .SS "Add \f(CWpackage NAME VERSION\fP syntax"
.IX Subsection "Add package NAME VERSION syntax"
This new syntax allows a module author to set the \f(CW$VERSION\fR of a namespace
when the namespace is declared with 'package'.  It eliminates the need
for \f(CW\*(C`our $VERSION = ...\*(C'\fR and similar constructs.  E.g.
.PP
.Vb 2
\&      package Foo::Bar 1.23;
\&      # $Foo::Bar::VERSION == 1.23
.Ve
.PP
There are several advantages to this:
.IP "\(bu" 4
\&\f(CW$VERSION\fR is parsed in \fIexactly\fR the same way as \f(CW\*(C`use NAME VERSION\*(C'\fR
.IP "\(bu" 4
\&\f(CW$VERSION\fR is set at compile time
.IP "\(bu" 4
Eliminates \f(CW\*(C`$VERSION = ...\*(C'\fR and \f(CW\*(C`eval $VERSION\*(C'\fR clutter
.IP "\(bu" 4
As it requires \s-1VERSION\s0 to be a numeric literal or v\-string
literal, it can be statically parsed by toolchain modules
without \f(CW\*(C`eval\*(C'\fR the way \s-1MM\-\s0>parse_version does for \f(CW\*(C`$VERSION = ...\*(C'\fR
.IP "\(bu" 4
Alpha versions with underscores do not need to be quoted; static
parsing will preserve the underscore, but during compilation, Perl
will remove underscores as it does for all numeric literals
.Sp
It does not break old code with only \f(CW\*(C`package NAME\*(C'\fR, but code that uses
\&\f(CW\*(C`package NAME VERSION\*(C'\fR will need to be restricted to perl 5.11.X or newer
This is analogous to the change to \f(CW\*(C`open\*(C'\fR from two-args to three-args.
Users requiring the latest Perl will benefit, and perhaps N years from
now it will become standard practice when Perl 5.12 is targeted the way
that 5.6 is today.
.SH "Modules and Pragmata"
.IX Header "Modules and Pragmata"
.SS "Updated Modules"
.IX Subsection "Updated Modules"
.IP "\(bu" 4
Upgrade to Test-Simple 0.94
.IP "\(bu" 4
Upgrade to Storable 2.21
.IP "\(bu" 4
Upgrade to Pod-Simple 3.08
.IP "\(bu" 4
Upgrade to Parse-CPAN-Meta 1.40
.IP "\(bu" 4
Upgrade to ExtUtils-Manifest 1.57
.IP "\(bu" 4
Upgrade to ExtUtils-CBuilder 0.260301
.IP "\(bu" 4
Upgrade to \s-1CGI\s0.pm\-3.48
.IP "\(bu" 4
Upgrade \s-1CPANPLUS\s0 to \s-1CPAN\s0 version 0.89_02
.IP "\(bu" 4
Upgrade to threads::shared 1.32
.IP "\(bu" 4
Upgrade ExtUtils::ParseXS to 2.21
.IP "\(bu" 4
Upgrade File::Path to 2.08 (and add taint.t test)
.IP "\(bu" 4
Upgrade Module::CoreList to 2.20
.IP "\(bu" 4
Updated Object::Accessor to0.36
.SH "New Documentation"
.IX Header "New Documentation"
.IP "\(bu" 4
perlpolicy extends the \*(L"Social contract about contributed modules\*(R" into
the beginnings of a document on Perl porting policies.
.SH "Changes to Existing Documentation"
.IX Header "Changes to Existing Documentation"
.ie n .IP "Documentation for $1 in perlvar.pod clarified" 4
.el .IP "Documentation for \f(CW$1\fR in perlvar.pod clarified" 4
.IX Item "Documentation for $1 in perlvar.pod clarified"
.SH "Performance Enhancements"
.IX Header "Performance Enhancements"
.PD 0
.ie n .IP """if (%foo)"" has been optimized to be faster than ""if (keys %foo)""" 4
.el .IP "\f(CWif (%foo)\fR has been optimized to be faster than \f(CWif (keys %foo)\fR" 4
.IX Item "if (%foo) has been optimized to be faster than if (keys %foo)"
.PD
.SH "Platform Specific Notes"
.IX Header "Platform Specific Notes"
.IP "Darwin (Mac \s-1OS\s0 X)" 4
.IX Item "Darwin (Mac OS X)"
.RS 4
.PD 0
.IP "\(bu" 4
.PD
Skip testing the be_BY.CP1131 locale on Darwin 10 (Mac \s-1OS\s0 X 10.6),
as it's still buggy.
.IP "\(bu" 4
Correct infelicities in the regexp used to identify buggy locales
on Darwin 8 and 9 (Mac \s-1OS\s0 X 10.4 and 10.5, respectively).
.RE
.RS 4
.RE
.IP "DragonFly \s-1BSD\s0" 4
.IX Item "DragonFly BSD"
.RS 4
.PD 0
.IP "\(bu" 4
.PD
Fix thread library selection [perl #69686]
.RE
.RS 4
.RE
.IP "Win32" 4
.IX Item "Win32"
.RS 4
.PD 0
.IP "\(bu" 4
.PD
Initial support for mingw64 is now available
.IP "\(bu" 4
Various bits of Perl's build infrastructure are no longer converted to win32 line endings at release time. If this hurts you, please speak up.
.RE
.RS 4
.RE
.SH "Selected Bug Fixes"
.IX Header "Selected Bug Fixes"
.IP "\(bu" 4
Perl now properly returns a syntax error instead of segfaulting
if \f(CW\*(C`each\*(C'\fR, \f(CW\*(C`keys\*(C'\fR or \f(CW\*(C`values\*(C'\fR is used without an argument
.IP "\(bu" 4
\&\f(CW\*(C`tell()\*(C'\fR now fails properly if called without an argument and when no previous file was read
.Sp
\&\f(CW\*(C`tell()\*(C'\fR now returns \f(CW\*(C`\-1\*(C'\fR, and sets errno to \f(CW\*(C`EBADF\*(C'\fR, thus restoring the 5.8.x behaviour
.IP "\(bu" 4
overload no longer implicitly unsets fallback on repeated 'use overload' lines
.IP "\(bu" 4
\&\fIPOSIX::strftime()\fR can now handle Unicode characters in the format string.
.IP "\(bu" 4
The Windows \fIselect()\fR implementation now supports all empty \f(CW\*(C`fd_set\*(C'\fRs more correctly.
.SH "New or Changed Diagnostics"
.IX Header "New or Changed Diagnostics"
.IP "\(bu" 4
The 'syntax' category was removed from 5 warnings that should only be in 'deprecated'.
.IP "\(bu" 4
Three fatal pack/unpack error messages have been normalized to \*(L"panic: \f(CW%s\fR\*(R"
.IP "\(bu" 4
\&\*(L"Unicode character is illegal\*(R" has been rephrased to be more accurate
.Sp
It now reads \f(CW\*(C`Unicode non\-character is illegal in interchange\*(C'\fR and the
perldiag documentation has been expanded a bit.
.IP "\(bu" 4
Perl now defaults to issuing a warning if a deprecated language feature is used.
.Sp
To disable this feature in a given lexical scope, you should use \f(CW\*(C`no
warnings \*(Aqdeprecated\*(Aq;\*(C'\fR For information about which language features
are deprecated and explanations of various deprecation warnings, please
see perldiag
.SH "Testing"
.IX Header "Testing"
.IP "\(bu" 4
Significant cleanups to core tests to ensure that language and
interpreter features are not used before they're tested.
.IP "\(bu" 4
\&\f(CW\*(C`make test_porting\*(C'\fR now runs a number of important pre-commit checks which might be of use to anyone working on the Perl core.
.IP "\(bu" 4
\&\fIt/porting/podcheck.t\fR automatically checks the well-formedness of
\&\s-1POD\s0 found in all .pl, .pm and .pod files in the \fI\s-1MANIFEST\s0\fR, other than in
dual-lifed modules which are primarily maintained outside the Perl core.
.IP "\(bu" 4
\&\fIt/porting/manifest.t\fR now tests that all files listed in \s-1MANIFEST\s0 are present.
.SH "Known Problems"
.IX Header "Known Problems"
.IP "Untriaged test crashes on Windows 2000" 4
.IX Item "Untriaged test crashes on Windows 2000"
Several porters have reported mysterious crashes when Perl's entire test suite is run after a build on certain Windows 2000 systems.  When run by hand, the individual tests reportedly work fine.
.IP "Known test failures on \s-1VMS\s0" 4
.IX Item "Known test failures on VMS"
Perl 5.11.1 fails a small set of core and \s-1CPAN\s0 tests as of this release.
With luck, that'll be sorted out for 5.11.2
.SH "Errata for 5.11.0"
.IX Header "Errata for 5.11.0"
.IP "The Perl 5.11.0 release notes incorrectly described 'delete local'" 4
.IX Item "The Perl 5.11.0 release notes incorrectly described 'delete local'"
.SH "Acknowledgements"
.IX Header "Acknowledgements"
Perl 5.11.1 represents approximately 3 weeks development since Perl 5.11.0
contains 22,000 lines of changes across 396 files from 26 authors and committers:
.PP
Abigail, Alex Vandiver, brian d foy, Chris Williams, Craig A. Berry,
David Fifield, David Golden, demerphq, Eric Brine, Geoffrey T. Dairiki,
George Greer, H.Merijn Brand, Jan Dubois, Jerry D. Hedden, Jesse Vincent,
Josh ben Jore, Max Maischein, Nicholas Clark, Rafael Garcia-Suarez,
Simon Schubert, Sisyphus, Smylers, Steve Hay, Steve Peters, Vincent Pit
and Yves Orton.
.PP
Many of the changes included in this version originated in the \s-1CPAN\s0
modules included in Perl's core.  We're grateful to the entire \s-1CPAN\s0
community for helping Perl to flourish.
.SH "Reporting Bugs"
.IX Header "Reporting Bugs"
If you find what you think is a bug, you might check the articles
recently posted to the comp.lang.perl.misc newsgroup and the perl
bug database at http://rt.perl.org/perlbug/ .  There may also be
information at http://www.perl.org/ , the Perl Home Page.
.PP
If you believe you have an unreported bug, please run the \fBperlbug\fR
program included with your release.  Be sure to trim your bug down
to a tiny but sufficient test case.  Your bug report, along with the
output of \f(CW\*(C`perl \-V\*(C'\fR, will be sent off to perlbug@perl.org to be
analysed by the Perl porting team.
.PP
If the bug you are reporting has security implications, which make it
inappropriate to send to a publicly archived mailing list, then please send
it to perl5\-security\-report@perl.org. This points to a closed subscription
unarchived mailing list, which includes all the core committers, who be able
to help assess the impact of issues, figure out a resolution, and help
co-ordinate the release of patches to mitigate or fix the problem across all
platforms on which Perl is supported. Please only use this address for
security issues in the Perl core, not for modules independently
distributed on \s-1CPAN\s0.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
The \fIChanges\fR file for an explanation of how to view exhaustive details
on what changed.
.PP
The \fI\s-1INSTALL\s0\fR file for how to build Perl.
.PP
The \fI\s-1README\s0\fR file for general stuff.
.PP
The \fIArtistic\fR and \fICopying\fR files for copyright information.
