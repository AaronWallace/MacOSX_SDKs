.\" Automatically generated by Pod::Man 2.23 (Pod::Simple 3.14)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "PERL5113DELTA 1"
.TH PERL5113DELTA 1 "2012-11-03" "perl v5.12.5" "Perl Programmers Reference Guide"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
perl5113delta \- what is new for perl v5.11.3
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This document describes differences between the 5.11.2 release and
the 5.11.3 release.
.PP
If you are upgrading from an earlier release such as 5.11.1, first read
the perl5112delta, which describes differences between 5.11.1 and
5.11.2
.SH "Incompatible Changes"
.IX Header "Incompatible Changes"
.ie n .SS "Filehandles are blessed directly into ""IO::Handle"", as ""FileHandle"" is merely a wrapper around ""IO::Handle""."
.el .SS "Filehandles are blessed directly into \f(CWIO::Handle\fP, as \f(CWFileHandle\fP is merely a wrapper around \f(CWIO::Handle\fP."
.IX Subsection "Filehandles are blessed directly into IO::Handle, as FileHandle is merely a wrapper around IO::Handle."
The previous behaviour was to bless Filehandles into FileHandle
(an empty proxy class) if it was loaded into memory and otherwise
to bless them into \f(CW\*(C`IO::Handle\*(C'\fR.
.SH "Core Enhancements"
.IX Header "Core Enhancements"
.SS "Unicode version"
.IX Subsection "Unicode version"
Perl is shipped with the latest Unicode version, 5.2, dated October 2009.  See
<http://www.unicode.org/versions/Unicode5.2.0> for details about this release
of Unicode.  See perlunicode for instructions on installing and using
older versions of Unicode.
.SS "Unicode properties"
.IX Subsection "Unicode properties"
Perl can now handle every Unicode character property.  A new pod,
perluniprops, lists all available non-Unihan character properties.  By
default the Unihan properties and certain others (deprecated and Unicode
internal-only ones) are not exposed.  See below for more details on
these; there is also a section in the pod listing them, and why they are
not exposed.
.PP
Perl now fully supports the Unicode compound-style of using \f(CW\*(C`=\*(C'\fR and \f(CW\*(C`:\*(C'\fR
in writing regular expressions: \f(CW\*(C`\ep{property=value}\*(C'\fR and
\&\f(CW\*(C`\ep{property:value}\*(C'\fR (both of which mean the same thing).
.PP
Perl now fully supports the Unicode loose matching rules for text
between the braces in \f(CW\*(C`\ep{...}\*(C'\fR constructs.  In addition, Perl also allows
underscores between digits of numbers.
.PP
All the Unicode-defined synonyms for properties and property values are
now accepted.
.PP
\&\f(CW\*(C`qr/\eX/\*(C'\fR, which matches a Unicode logical character, has been expanded to work
better with various Asian languages.  It now is defined as an \f(CW\*(C`extended
grapheme cluster\*(C'\fR.  (See <http://www.unicode.org/reports/tr29/>).
Anything matched previously that made sense will continue to be matched.  But
in addition:
.IP "\(bu" 4
\&\f(CW\*(C`\eX\*(C'\fR will now not break apart a \f(CW\*(C`CR\ LF\*(C'\fR sequence.
.IP "\(bu" 4
\&\f(CW\*(C`\eX\*(C'\fR will now match a sequence including the \f(CW\*(C`ZWJ\*(C'\fR and \f(CW\*(C`ZWNJ\*(C'\fR characters.
.IP "\(bu" 4
\&\f(CW\*(C`\eX\*(C'\fR will now always match at least one character, including an initial mark.
Marks generally come after a base character, but it is possible in Unicode to
have them in isolation, and \f(CW\*(C`\eX\*(C'\fR will now handle that case, for example at the
beginning of a line or after a \f(CW\*(C`ZWSP\*(C'\fR.  And this is the part where \f(CW\*(C`\eX\*(C'\fR
doesn't match the things that it used to that don't make sense.  Formerly, for
example, you could have the nonsensical case of an accented \s-1LF\s0.
.IP "\(bu" 4
\&\f(CW\*(C`\eX\*(C'\fR will now match a (Korean) Hangul syllable sequence, and the Thai and Lao
exception cases.
.PP
Otherwise, this change should be transparent for the non-affected languages.
.PP
\&\f(CW\*(C`\ep{...}\*(C'\fR matches using the Canonical_Combining_Class property were
completely broken in previous Perls.  This is now fixed.
.PP
In previous Perls, the Unicode \f(CW\*(C`Decomposition_Type=Compat\*(C'\fR property and a
Perl extension had the same name, which led to neither matching all the
correct values (with more than 100 mistakes in one, and several thousand
in the other).  The Perl extension has now been renamed to be
\&\f(CW\*(C`Decomposition_Type=Noncanonical\*(C'\fR (short: \f(CW\*(C`dt=noncanon\*(C'\fR).  It has the same
meaning as was previously intended, namely the union of all the
non-canonical Decomposition types, with Unicode \f(CW\*(C`Compat\*(C'\fR being just one of
those.
.PP
\&\f(CW\*(C`\ep{Uppercase}\*(C'\fR and \f(CW\*(C`\ep{Lowercase}\*(C'\fR have been brought into line with the
Unicode definitions.  This means they each match a few more characters
than previously.
.PP
\&\f(CW\*(C`\ep{Cntrl}\*(C'\fR now matches the same characters as \f(CW\*(C`\ep{Control}\*(C'\fR.  This means it
no longer will match Private Use (gc=co), Surrogates (gc=cs), nor Format
(gc=cf) code points.  The Format code points represent the biggest
possible problem.  All but 36 of them are either officially deprecated
or strongly discouraged from being used.  Of those 36, likely the most
widely used are the soft hyphen (U+00AD), and \s-1BOM\s0, \s-1ZWSP\s0, \s-1ZWNJ\s0, \s-1WJ\s0, and
similar, plus Bi-directional controls.
.PP
\&\f(CW\*(C`\ep{Alpha}\*(C'\fR now matches the same characters as \f(CW\*(C`\ep{Alphabetic}\*(C'\fR.  The Perl
definition included a number of things that aren't really alpha (all
marks), while omitting many that were.  As a direct consequence, the
definitions of \f(CW\*(C`\ep{Alnum}\*(C'\fR and \f(CW\*(C`\ep{Word}\*(C'\fR which depend on Alpha also change.
.PP
\&\f(CW\*(C`\ep{Word}\*(C'\fR also now doesn't match certain characters it wasn't supposed
to, such as fractions.
.PP
\&\f(CW\*(C`\ep{Print}\*(C'\fR no longer matches the line control characters: Tab, \s-1LF\s0, \s-1CR\s0,
\&\s-1FF\s0, \s-1VT\s0, and \s-1NEL\s0.  This brings it in line with the documentation.
.PP
\&\f(CW\*(C`\ep{Decomposition_Type=Canonical}\*(C'\fR now includes the Hangul syllables.
.PP
The Numeric type property has been extended to include the Unihan
characters.
.PP
There is a new Perl extension, the 'Present_In', or simply 'In',
property.  This is an extension of the Unicode Age property, but
\&\f(CW\*(C`\ep{In=5.0}\*(C'\fR matches any code point whose usage has been determined
\&\fIas of\fR Unicode version 5.0.  The \f(CW\*(C`\ep{Age=5.0}\*(C'\fR only matches code points
added in \fIprecisely\fR version 5.0.
.PP
A number of properties did not have the correct values for unassigned
code points.  This is now fixed.  The affected properties are
Bidi_Class, East_Asian_Width, Joining_Type, Decomposition_Type,
Hangul_Syllable_Type, Numeric_Type, and Line_Break.
.PP
The Default_Ignorable_Code_Point, ID_Continue, and ID_Start properties
have been updated to their current Unicode definitions.
.PP
Certain properties that are supposed to be Unicode internal-only were
erroneously exposed by previous Perls.  Use of these in regular
expressions will now generate, if enabled, a deprecated warning message.
The properties are: Other_Alphabetic, Other_Default_Ignorable_Code_Point,
Other_Grapheme_Extend, Other_ID_Continue, Other_ID_Start, Other_Lowercase,
Other_Math, and Other_Uppercase.
.PP
An installation can now fairly easily change which Unicode properties
Perl understands.  As mentioned above, certain properties are by default
turned off.  These include all the Unihan properties (which should be
accessible via the \s-1CPAN\s0 module Unicode::Unihan) and any deprecated or
Unicode internal-only property that Perl has never exposed.
.PP
The generated files in the \f(CW\*(C`lib/unicore/To\*(C'\fR directory are now more
clearly marked as being stable, directly usable by applications.
New hash entries in them give the format of the normal entries,
which allows for easier machine parsing.  Perl can generate files
in this directory for any property, though most are suppressed.  An
installation can choose to change which get written.  Instructions
are in perluniprops.
.SS "Regular Expressions"
.IX Subsection "Regular Expressions"
U+0FFFF is now a legal character in regular expressions.
.SH "Modules and Pragmata"
.IX Header "Modules and Pragmata"
.SS "Pragmata Changes"
.IX Subsection "Pragmata Changes"
.ie n .IP """constant""" 4
.el .IP "\f(CWconstant\fR" 4
.IX Item "constant"
Upgraded from version 1.19 to 1.20.
.ie n .IP """diagnostics""" 4
.el .IP "\f(CWdiagnostics\fR" 4
.IX Item "diagnostics"
This pragma no longer suppresses \f(CW\*(C`Use of uninitialized value in range (or flip)\*(C'\fR warnings. [perl #71204]
.ie n .IP """feature""" 4
.el .IP "\f(CWfeature\fR" 4
.IX Item "feature"
Upgraded from 1.13 to 1.14.  Added the \f(CW\*(C`unicode_strings\*(C'\fR feature:
.Sp
.Vb 1
\&    use feature "unicode_strings";
.Ve
.Sp
This pragma turns on Unicode semantics for the case-changing operations
(uc/lc/ucfirst/lcfirst) on strings that don't have the internal \s-1UTF\-8\s0 flag set,
but that contain single-byte characters between 128 and 255.
.ie n .IP """legacy""" 4
.el .IP "\f(CWlegacy\fR" 4
.IX Item "legacy"
The experimental \f(CW\*(C`legacy\*(C'\fR pragma, introduced in 5.11.2, has been removed,
and its functionality replaced by the new feature pragma, \f(CW\*(C`use feature
"unicode_strings"\*(C'\fR.
.ie n .IP """threads""" 4
.el .IP "\f(CWthreads\fR" 4
.IX Item "threads"
Upgraded from version 1.74 to 1.75.
.ie n .IP """warnings""" 4
.el .IP "\f(CWwarnings\fR" 4
.IX Item "warnings"
Upgraded from 1.07 to 1.08.  Added new \f(CW\*(C`warnings::fatal_enabled()\*(C'\fR function.
.SS "Updated Modules"
.IX Subsection "Updated Modules"
.ie n .IP """Archive::Extract""" 4
.el .IP "\f(CWArchive::Extract\fR" 4
.IX Item "Archive::Extract"
Upgraded from version 0.34 to 0.36.
.ie n .IP """CPAN""" 4
.el .IP "\f(CWCPAN\fR" 4
.IX Item "CPAN"
Upgraded from version 1.94_51 to 1.94_5301, which is 1.94_53 on \s-1CPAN\s0
plus some local fixes for bleadperl.
.Sp
Includes better bzip2 support, improved FirstTime experience with
auto-selection of \s-1CPAN\s0 mirrors, proper handling of modules removed from the
Perl core, and an updated 'cpan' utility script
.ie n .IP """CPANPLUS""" 4
.el .IP "\f(CWCPANPLUS\fR" 4
.IX Item "CPANPLUS"
Upgraded from version 0.89_09 to 0.90.
.ie n .IP """Encode""" 4
.el .IP "\f(CWEncode\fR" 4
.IX Item "Encode"
Upgraded from version 2.38 to 2.39.
.ie n .IP """ExtUtils::MakeMaker""" 4
.el .IP "\f(CWExtUtils::MakeMaker\fR" 4
.IX Item "ExtUtils::MakeMaker"
Upgraded from version 6.55_02 to 6.56.  Adds new \s-1BUILD_REQUIRES\s0 key to
indicate build-only prerequisites.  Also adds support for
mingw64 and the new \*(L"package \s-1NAME\s0 \s-1VERSION\s0\*(R" syntax.
.ie n .IP """File::Path""" 4
.el .IP "\f(CWFile::Path\fR" 4
.IX Item "File::Path"
Upgraded from version 2.08 to 2.08_01.
.ie n .IP """Module::Build""" 4
.el .IP "\f(CWModule::Build\fR" 4
.IX Item "Module::Build"
Upgraded from version 0.35_09 to 0.36.  Compared to 0.35, this version has a
new 'installdeps' action, supports the \s-1PERL_MB_OPT\s0 environment variable, adds a
\&'share_dir' property for File::ShareDir support, support the \*(L"package \s-1NAME\s0
\&\s-1VERSION\s0\*(R" syntax and has many other enhancements and bug fixes.  The
\&'passthrough' style of Module::Build::Compat has been deprecated.
.ie n .IP """Module::CoreList""" 4
.el .IP "\f(CWModule::CoreList\fR" 4
.IX Item "Module::CoreList"
Upgraded from version 2.23 to 2.24.
.ie n .IP """POSIX""" 4
.el .IP "\f(CWPOSIX\fR" 4
.IX Item "POSIX"
Upgraded from version 1.18 to 1.19. Error codes for \f(CW\*(C`getaddrinfo()\*(C'\fR and
\&\f(CW\*(C`getnameinfo()\*(C'\fR are now available.
.ie n .IP """Pod::Simple""" 4
.el .IP "\f(CWPod::Simple\fR" 4
.IX Item "Pod::Simple"
Upgraded from version 3.10 to 3.13.
.ie n .IP """Safe""" 4
.el .IP "\f(CWSafe\fR" 4
.IX Item "Safe"
Upgraded from version 2.19 to 2.20.
.SH "Utility Changes"
.IX Header "Utility Changes"
.IP "\fIperlbug\fR" 4
.IX Item "perlbug"
No longer reports \*(L"Message sent\*(R" when it hasn't actually sent the message
.SH "Changes to Existing Documentation"
.IX Header "Changes to Existing Documentation"
The Pod specification (perlpodspec) has been updated to bring the
specification in line with modern usage already supported by most Pod systems.
A parameter string may now follow the format name in a \*(L"begin/end\*(R" region.
Links to URIs with a text description are now allowed.  The usage of
\&\f(CW\*(C`L<"section">\*(C'\fR has been marked as deprecated.
.PP
if.pm has been documented in \*(L"use\*(R" in perlfunc as a means to get
conditional loading of modules despite the implicit \s-1BEGIN\s0 block around \f(CW\*(C`use\*(C'\fR.
.SH "Installation and Configuration Improvements"
.IX Header "Installation and Configuration Improvements"
.SS "Testing improvements"
.IX Subsection "Testing improvements"
.ie n .IP "It's now possible to override ""PERL5OPT"" and friends in \fIt/TEST\fR" 4
.el .IP "It's now possible to override \f(CWPERL5OPT\fR and friends in \fIt/TEST\fR" 4
.IX Item "It's now possible to override PERL5OPT and friends in t/TEST"
.SS "Platform Specific Changes"
.IX Subsection "Platform Specific Changes"
.PD 0
.IP "Win32" 4
.IX Item "Win32"
.RS 4
.IP "\(bu" 4
.PD
Always add a manifest resource to \f(CW\*(C`perl.exe\*(C'\fR to specify the \f(CW\*(C`trustInfo\*(C'\fR
settings for Windows Vista and later.  Without this setting Windows
will treat \f(CW\*(C`perl.exe\*(C'\fR as a legacy application and apply various
heuristics like redirecting access to protected file system areas
(like the \*(L"Program Files\*(R" folder) to the users \*(L"VirtualStore\*(R"
instead of generating a proper \*(L"permission denied\*(R" error.
.Sp
For \s-1VC8\s0 and \s-1VC9\s0 this manifest setting is automatically generated by
the compiler/linker (together with the binding information for their
respective runtime libraries); for all other compilers we need to
embed the manifest resource explicitly in the external resource file.
.Sp
This change also requests the Microsoft Common-Controls version 6.0
(themed controls introduced in Windows \s-1XP\s0) via the dependency list
in the assembly manifest.  For \s-1VC8\s0 and \s-1VC9\s0 this is specified using the
\&\f(CW\*(C`/manifestdependency\*(C'\fR linker commandline option instead.
.RE
.RS 4
.RE
.IP "cygwin" 4
.IX Item "cygwin"
.RS 4
.PD 0
.IP "Enable IPv6 support on cygwin 1.7 and newer" 4
.IX Item "Enable IPv6 support on cygwin 1.7 and newer"
.RE
.RS 4
.RE
.IP "OpenVMS" 4
.IX Item "OpenVMS"
.RS 4
.IP "Make \-UDEBUGGING the default on \s-1VMS\s0 for 5.12.0." 4
.IX Item "Make -UDEBUGGING the default on VMS for 5.12.0."
.PD
Like it has been everywhere else for ages and ages.  Also make
command-line selection of \-UDEBUGGING and \-DDEBUGGING work in
configure.com; before the only way to turn it off was by saying
no in answer to the interactive question.
.RE
.RS 4
.RE
.SH "Selected Bug Fixes"
.IX Header "Selected Bug Fixes"
.IP "\(bu" 4
Ensure that pp_qr returns a new regexp \s-1SV\s0 each time. Resolves \s-1RT\s0 #69852.
.Sp
Instead of returning a(nother) reference to the (pre-compiled) regexp in the
optree, use \fIreg_temp_copy()\fR to create a copy of it, and return a reference to
that. This resolves issues about Regexp::DESTROY not being called in a timely
fashion (the original bug tracked by \s-1RT\s0 #69852), as well as bugs related to
blessing regexps, and of assigning to regexps, as described in correspondence
added to the ticket.
.Sp
It transpires that we also need to undo the \fISvPVX()\fR sharing when ithreads
cloning a Regexp \s-1SV\s0, because mother_re is set to \s-1NULL\s0, instead of a cloned
copy of the mother_re. This change might fix bugs with regexps and threads in
certain other situations, but as yet neither tests nor bug reports have
indicated any problems, so it might not actually be an edge case that it's
possible to reach.
.IP "\(bu" 4
Several compilation errors and segfaults when perl was built with \f(CW\*(C`\-Dmad\*(C'\fR were fixed.
.IP "\(bu" 4
Fixes for lexer \s-1API\s0 changes in 5.11.2 which broke NYTProf's savesrc option.
.IP "\(bu" 4
\&\fI\-t\fR should only return \s-1TRUE\s0 for file handles connected to a \s-1TTY\s0
.Sp
The Microsoft C version of \fIisatty()\fR returns \s-1TRUE\s0 for all
character mode devices, including the /dev/null style \*(L"nul\*(R"
device and printers like \*(L"lpt1\*(R".
.IP "\(bu" 4
Fixed a regression caused by commit fafafbaf which caused a panic during
parameter passing [perl #70171]
.IP "\(bu" 4
On systems which in-place edits without backup files, \-i'*' now works as
the documentation says it does [perl #70802]
.IP "\(bu" 4
Saving and restoring magic flags no longer loses readonly flag.
.IP "\(bu" 4
The malformed syntax \f(CW\*(C`grep EXPR LIST\*(C'\fR (note the missing comma) no longer
causes abrupt and total failure.
.IP "\(bu" 4
Regular expressions compiled with \f(CW\*(C`qr{}\*(C'\fR literals properly set \f(CW\*(C`$\*(Aq\*(C'\fR when
matching again.
.IP "\(bu" 4
Using named subroutines with \f(CW\*(C`sort\*(C'\fR should no longer lead to bus errors [perl
#71076]
.IP "\(bu" 4
Numerous bugfixes catch small issues caused by the recently-added Lexer \s-1API\s0.
.IP "\(bu" 4
Smart match against \f(CW@_\fR sometimes gave false negatives. [perl #71078]
.IP "\(bu" 4
\&\f(CW$@\fR may now be assigned a read-only value (without error or busting the stack).
.IP "\(bu" 4
\&\f(CW\*(C`sort\*(C'\fR called recursively from within an active comparison subroutine no
longer causes a bus error if run multiple times. [perl #71076]
.SH "New or Changed Diagnostics"
.IX Header "New or Changed Diagnostics"
.IP "\(bu" 4
\&\f(CW\*(C`split\*(C'\fR now warns when called in void context
.IP "\(bu" 4
\&\f(CW\*(C`printf\*(C'\fR\-style functions called with too few arguments will now issue the
warning \f(CW"Missing argument in %s"\fR [perl #71000]
.SH "New Tests"
.IX Header "New Tests"
Many modules updated from \s-1CPAN\s0 incorporate new tests.
.IP "t/comp/final_line_num.t" 4
.IX Item "t/comp/final_line_num.t"
See if line numbers are correct at \s-1EOF\s0
.IP "t/comp/form_scope.t" 4
.IX Item "t/comp/form_scope.t"
See if format scoping works
.IP "t/comp/line_debug.t" 4
.IX Item "t/comp/line_debug.t"
See if @{\*(L"_<$file\*(R"} works
.IP "t/op/filetest_t.t" 4
.IX Item "t/op/filetest_t.t"
See if \-t file test works
.IP "t/op/qr.t" 4
.IX Item "t/op/qr.t"
See if qr works
.IP "t/op/utf8cache.t" 4
.IX Item "t/op/utf8cache.t"
Tests malfunctions of utf8 cache
.IP "t/re/uniprops.t" 4
.IX Item "t/re/uniprops.t"
Test unicode \ep{} regex constructs
.SH "Deprecations"
.IX Header "Deprecations"
The following items are now deprecated.
.ie n .IP "Use of ""goto"" to jump into a construct is deprecated" 4
.el .IP "Use of ``goto'' to jump into a construct is deprecated" 4
.IX Item "Use of goto to jump into a construct is deprecated"
Using \f(CW\*(C`goto\*(C'\fR to jump from an outer scope into an inner
scope is now deprecated. This rare use case was causing
problems in the implementation of scopes.
.SH "Acknowledgements"
.IX Header "Acknowledgements"
Perl 5.11.3 represents approximately one month of development since
Perl 5.11.2 and contains 61407 lines of changes across 396 files
from 40 authors and committers:
.PP
Abigail, Alex Davies, Alexandr Ciornii, Andrew Rodland, Andy
Dougherty, Bram, brian d foy, Chip Salzenberg, Chris Williams, Craig
A. Berry, Daniel Frederick Crisman, David Golden, Dennis Kaarsemaker,
Eric Brine, Father Chrysostomos, Gene Sullivan, Gerard Goossen, H.
Merijn Brand, Hugo van der Sanden, Jan Dubois, Jerry D. Hedden,
Jesse Vincent, Jim Cromie, Karl Williamson, Leon Brocard, Max
Maischein, Michael Breen, Moritz Lenz, Nicholas Clark, Rafael
Garcia-Suarez, Reini Urban, Ricardo Signes, Stepan Kasal, Steve
Hay, Steve Peters, Tim Bunce, Tony Cook, Vincent Pit and Zefram.
.PP
Many of the changes included in this version originated in the \s-1CPAN\s0
modules included in Perl's core. We're grateful to the entire \s-1CPAN\s0
community for helping Perl to flourish.
.SH "Reporting Bugs"
.IX Header "Reporting Bugs"
If you find what you think is a bug, you might check the articles
recently posted to the comp.lang.perl.misc newsgroup and the perl
bug database at http://rt.perl.org/perlbug/ .  There may also be
information at http://www.perl.org/ , the Perl Home Page.
.PP
If you believe you have an unreported bug, please run the \fBperlbug\fR
program included with your release.  Be sure to trim your bug down
to a tiny but sufficient test case.  Your bug report, along with the
output of \f(CW\*(C`perl \-V\*(C'\fR, will be sent off to perlbug@perl.org to be
analysed by the Perl porting team.
.PP
If the bug you are reporting has security implications, which make it
inappropriate to send to a publicly archived mailing list, then please send
it to perl5\-security\-report@perl.org. This points to a closed subscription
unarchived mailing list, which includes all the core committers, who be able
to help assess the impact of issues, figure out a resolution, and help
co-ordinate the release of patches to mitigate or fix the problem across all
platforms on which Perl is supported. Please only use this address for
security issues in the Perl core, not for modules independently
distributed on \s-1CPAN\s0.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
The \fIChanges\fR file for an explanation of how to view exhaustive details
on what changed.
.PP
The \fI\s-1INSTALL\s0\fR file for how to build Perl.
.PP
The \fI\s-1README\s0\fR file for general stuff.
.PP
The \fIArtistic\fR and \fICopying\fR files for copyright information.
