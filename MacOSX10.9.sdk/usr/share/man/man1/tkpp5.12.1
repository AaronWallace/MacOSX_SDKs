.\" Automatically generated by Pod::Man 2.23 (Pod::Simple 3.14)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "TKPP 1"
.TH TKPP 1 "2011-03-22" "perl v5.12.5" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
tkpp \- frontend to pp written in Perl/Tk
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBtkpp\fR
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Tkpp is a \s-1GUI\s0 frontend to pp, which can turn perl scripts into stand-alone
\&\s-1PAR\s0 files, perl scripts or executables.
.PP
Below is a short explanation of all available screen elements; it is also
displayed from the \f(CW\*(C`Help\*(C'\fR \- \f(CW\*(C`Help Contents\*(C'\fR menu item.
.SS "Source file"
.IX Subsection "Source file"
The file you want to pack.
.SS "Output file (\-\-output, \-\-par, \-\-perlscript)"
.IX Subsection "Output file (--output, --par, --perlscript)"
The file you want the source file packed as.  This option recognizes the
\&\f(CW\*(C`.par\*(C'\fR, \f(CW\*(C`.pl\*(C'\fR and executable extensions, and supplies the corresponding build
option automatically.
.SS "Use icon (\-\-icon)"
.IX Subsection "Use icon (--icon)"
The icon file you want your output file to use.  This option will only work
when building Microsoft Windows \f(CW\*(C`.exe\*(C'\fR files.  Currently, this option only
accepts \f(CW\*(C`.ico\*(C'\fR files.
.SS "Add modules/files (\-\-add)"
.IX Subsection "Add modules/files (--add)"
Add the specified items into the package, along with their dependencies.
Multiple items should be separated by a comma (\f(CW\*(C`,\*(C'\fR) or semicolon (\f(CW\*(C`;\*(C'\fR).
.SS "Exclude modules (\-\-exclude)"
.IX Subsection "Exclude modules (--exclude)"
Exclude the given module from the dependency search path and from
the package.  Multiple modules should be separated by a comma (\f(CW\*(C`,\*(C'\fR) or
semicolon (\f(CW\*(C`;\*(C'\fR).
.SS "Scan dependencies (\-\-compile, \-\-execute, \-\-noscan)"
.IX Subsection "Scan dependencies (--compile, --execute, --noscan)"
Specify the dependency scanning method to use.  See pp for explanations
of the options.
.SS "\s-1GUI\s0 (\-\-gui)"
.IX Subsection "GUI (--gui)"
Build an executable that does not have a console window.  This option is
only applicable on Microsoft Windows, and is ignored when the output file
is a \f(CW\*(C`.par\*(C'\fR file.
.SS "Log (\-\-log)"
.IX Subsection "Log (--log)"
Log the output of packaging to a file.  The log file, \fItkpp.log\fR, will
be written in the user's home directory.
.SS "Verbose (\-\-verbose)"
.IX Subsection "Verbose (--verbose)"
Increase verbosity of output; from 1 to 3, 3 being the most verbose.
This option is ignored if logging is not enabled.
.SS "Build"
.IX Subsection "Build"
Starts building the package.
.SS "File Menu\->Preferences"
.IX Subsection "File Menu->Preferences"
Specify the location to \fIperl\fR and \fIpp\fR.  They must be set before Tkpp
will build anything.  The Tkpp configuration file, \fI.tkpprc\fR, is
stored in the user's home directory.
.SH "NOTES"
.IX Header "NOTES"
I write code for a living not literature, so any misspelled words in any
comments or anything, whoops ;)
.SH "SEE ALSO"
.IX Header "SEE ALSO"
pp, \s-1PAR\s0
.SH "AUTHORS"
.IX Header "AUTHORS"
Tkpp was written by Doug Gruber.
In the event this application breaks, you get both pieces ;)
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright 2003, 2004, 2005, 2006 by Doug Gruber <doug(a)dougthug.com>,
Audrey Tang <cpan@audreyt.org>.
.PP
Neither this program nor the associated pp program impose any
licensing restrictions on files generated by their execution, in
accordance with the 8th article of the Artistic License:
.PP
.Vb 5
\&    "Aggregation of this Package with a commercial distribution is
\&    always permitted provided that the use of this Package is embedded;
\&    that is, when no overt attempt is made to make this Package\*(Aqs
\&    interfaces visible to the end user of the commercial distribution.
\&    Such use shall not be construed as a distribution of this Package."
.Ve
.PP
Therefore, you are absolutely free to place any license on the resulting
executable, as long as the packed 3rd\-party libraries are also available
under the Artistic License.
.PP
This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.
.PP
See <http://www.perl.com/perl/misc/Artistic.html>
